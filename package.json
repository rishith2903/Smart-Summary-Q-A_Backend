{
  "name": "smart-summary-qa-backend",
  "version": "1.0.0",
  "description": "Smart-Summary-Q&A backend - AI-powered video and document processing with intelligent summarization and Q&A",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "start:prod": "NODE_ENV=production node server.js",
    "dev": "nodemon server.js",
    "test": "jest --config jest.config.js",
    "test:watch": "jest --watch --config jest.config.js",
    "test:coverage": "jest --coverage --config jest.config.js",
    "test:verbose": "VERBOSE_TESTS=true jest --verbose --config jest.config.js",
    "test:services": "jest test/*Service.test.js --config jest.config.js",
    "test:api": "jest test/api.test.js --config jest.config.js",
    "test:integration": "jest test/backend.test.js --config jest.config.js",
    "test:single": "jest --testNamePattern",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand --config jest.config.js"
  },
  "keywords": [
    "youtube",
    "video-processing",
    "transcription",
    "summarization",
    "ai",
    "nlp",
    "question-answering"
  ],
  "author": "Rishith Kumar Pachipulusu",
  "license": "MIT",
  "dependencies": {
    "@xenova/transformers": "^2.17.2",
    "axios": "^1.10.0",
    "cheerio": "^1.1.0",
    "cors": "^2.8.5",
    "dotenv": "^17.2.0",
    "express": "^4.21.2",
    "form-data": "^4.0.3",
    "fs-extra": "^11.3.0",
    "google-translate-api": "^0.1.1",
    "multer": "^2.0.1",
    "node-fetch": "^3.3.2",
    "node-whisper": "^2024.11.13",
    "pdf-parse": "^1.1.1",
    "playwright": "^1.54.1",
    "puppeteer": "^24.12.1",
    "youtube-dl-exec": "^3.0.22",
    "youtube-transcript": "^1.2.1",
    "ytdl-core": "^4.11.5"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/plugin-transform-modules-commonjs": "^7.27.1",
    "@babel/preset-env": "^7.28.0",
    "babel-jest": "^30.0.4",
    "jest": "^30.0.4",
    "nodemon": "^3.1.10",
    "supertest": "^7.1.3"
  },
  "jest": {
    "testEnvironment": "node",
    "testTimeout": 30000,
    "verbose": true,
    "collectCoverageFrom": [
      "services/**/*.js",
      "routes/**/*.js",
      "utils/**/*.js",
      "!**/node_modules/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  }
}
